
var g_AllControl = new Set();


class Control extends Node
{
	function Control (par) 
	{
		super.Node(par);
		g_AllControl.add(this);
		setAnchor(0.5,0.5);
		_touch = new Touch();
		_touch.object = this;
		enabled = true;
		_touch.onMouseDown = onMouseDown;
		_touch.onMouseMove = onMouseMove;
		_touch.onMouseUp = onMouseUp;
		_touch.onClick = onClick;
		_touch.swallow = true;
		_touch.enabled = true;
	}

	function finalize () 
	{
		g_AllControl.remove(this);
		invalidate _touch;
		super.finalize();
	}

	function disableAfterClick () 
	{
		g_AllControl.foreach(function(value){
			if (!value.issystem) {
			    value.enabled = false;
			}
		});
	}
	
	function onTouchUpdate () 
	{
		if (enabled) {
			_touch.addToManager();
			for (var i = 0; i < children.count; i++) {
				children[i].onTouchUpdate();
			};
		}
	}

	function onMouseDown (x,y) 
	{
		if (System.main.status.waitClickMode == WAIT_CLICK_TRANS||
			System.main.status.locklink) {
			//trans中或locklink时
			_touch.ignore = true;
		}
		dm(_touch.ignore);
	}

	function onMouseMove (x,y) 
	{
	}

	function onMouseUp (x,y) 
	{
	}

	function onClick (x,y) 
	{
		// body...
	}

	var _touch=void;
	property touch{
		getter {
	    	//getter
			return _touch;
		}
	}

	property disabled{
	    setter(v) {
	    	//setter
	    	_touch.enabled = !v;
		}
		getter {
	    	//getter
			return !_touch.enabled;
		}
	}

	var _issystem=false;//是否是系统控件（不受er/cm指令清除
	property issystem{
	    setter(v) {
	    	//setter
	    	_issystem = v;
		}
		getter {
	    	//getter
			return _issystem;
		}
	}
	
	property ignore{
	    setter(v) {
	    	//setter
	    	_touch.ignore = v;
		}
		getter {
	    	//getter
			return _touch.ignore;
		}
	}
}

