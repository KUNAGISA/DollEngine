
class App extends Window
{
	var tags; //KAGParser
	var back = %[];
	var world;
	var width;
	var height;
	function App () 
	{
		super.Window();
		if(global.App.mainApp) {
			em("不可重复创建App");
		}
		global.App.mainApp = this;
		this.width = DEConfig.device.width;
		this.height = DEConfig.device.height;
		this.initialize(DEConfig.device.width,DEConfig.device.height,DEConfig.device.scale);

		this.tags = new TagHandlers(this);
		
		this.world = new GameWorld();
		this.world.initialize(DEConfig.device.width,DEConfig.device.height);
	}

	function finalize () 
	{
		super.finalize();
	}

	function getLayerByElm (elm) 
	{
		var p=elm.page,layer=elm.layer;
		if (p == 'back') {
			if (layer == 'base' ||
				layer == 'world') {
				if(!this.back.world)
					this.back.world = %[];
				merger(this.back.world,elm);
			}
			else {
				if(!this.back[layer])
					this.back[layer] = %[];
				merger(this.back[layer],elm);
			}
			return void;
		}
		else {
			if (layer == 'base' ||
				layer == 'world') {
				return this.world;
			}
			var lay;
			if (typeof this.world.names[layer] == 'undefined') {
				var zorder=0;
				if(layer.indexOf('message') == 0)
				{
					if(layer == 'message')
						zorder=1000000;
					else
						zorder=1000000+1000*layer.substr(7);
				}
				else {
					if (layer!='0'&&+layer==0) {
						zorder = 0;
					}
					else
						zorder=1000*layer;
				}
			}
			else {
				lay = this.world.names[layer];
			}
			return lay;
		}
	}

	function getMessageByIndex (idx) 
	{
		// body...
	}

	function getLayerByName (name) 
	{
		// body...
	}

	function getLayerByIndex (idx) 
	{
		// body...
	}

	function proccess (file, label) 
	{
		this.tags.jumpTo(file,label);
	}

	function waitClick (time) 
	{
		
	}
}

App.mainApp = void;