
class TagHandlers extends KAGParser
{
	var _owner; //函数所调用的对象，通常是App对象
	var curFile;
	var macroParams = [];
	function TagHandlers (object) 
	{
		super.KAGParser();
		this._owner = object;
	}

	function onExecute (name, params)
	{
		var time = 0;
		if (name == 'jumpTo'||
			name == 'returnMacro'||
			name == 'getMacroParams'||
			name == 'onScenarioEnded') {
			print("%s指令被TagHandlers类占用",name);
		}
		if(this[name])
		{
			time = (this[name] incontextof this._owner)(params);
			if(time == void) time = 0;
		}
		else
		{
			if(this.callMacro(name))
			{
				time = -1;
				this.macroParams.add(params);
			}
			else
			{
				print("未找到指令"+name);
			}
		}
        return time;
	}

	function jumpTo (file, label) 
	{
		if (!file) {
			file = curFile;
		}
		if (!label) {
			label = "_def_";
		}
		curFile = file;
		super.jumpTo(file,label);
	}

	function returnMacro ()
	{
		this.macroParams.erase(this.macroParams.count-1);
		this.returnCall();
		return -1;
	}

	function getMacroParams () 
	{
		if (this.macroParams.count == 0) {
			em("macro参数为空，一定是哪里有问题了");
		}
		return this.macroParams[-1];
	}

	function onScenarioEnded () 
	{
		this._owner.waitClick(0);
	}

	/*******TAG部分*******/

	/*******系统操作*******/
	//打印
	function dm (elm) 
	{
		var str;
		if (elm.exp) {
			str = Scripts.eval(elm.exp);
		}
		print(str);
	}

	//执行表达式
	function eval (elm) 
	{
		if (elm.exp) {
			Scripts.eval(elm.exp);
		}
		return 0;
	}

	/*******界面控制*******/
	//创建界面@ui storage=xx layer=xx page=xx visible=xx name=xx data=xx
	function ui (elm) 
	{
		var par = this.getLayerByElm(elm);
		if (!par) {
			return;
		}
		var uipath = Storages.getFullPath(elm.storage);
		if (!uipath) {
			print("[loadui]ui配置文件%s未找到",uipath);
			return;
		}
		if (typeof elm.hd == 'undefined') {
			elm.hd = true;
		}
		var lay = UIReader.readJsonFile(uipath,par,elm.hd);
		if (typeof elm['visible'] == 'undefined') {
			lay.visible = true;
		}
		else {
			lay.visible = elm.visible;
		}
		if (elm.name && par.names) {
			par.names[elm.name] = lay;
			lay.name = elm.name;
		}
		if (typeof lay.initialize != 'undefined') {
			if (elm.data) {
				var data = Scripts.eval(elm.data);
				lay.initialize(data);
			}
			else {
				lay.initialize();
			}
			lay.refresh();
			if (elm.anim) {
				lay.playShow();
			}
		}
		print("UI %s 创建成功",elm.storage);
	}

	function image (elm) 
	{
		var node = new Sprite(this.current);
		node.setParams(elm);
	}

}