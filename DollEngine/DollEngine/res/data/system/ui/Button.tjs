
class Button extends Control
{
	var imageBase = void;
	var clickData = %[
		exp : "", //点击时执行的表达式
		se : '', //点击时的音效
		sebuf : '',//点击时的音效音轨的编号
		storage : void, //跳转的脚本
		target : void, //跳转的脚本的标签
	];
	function Button (par) 
	{
		super.Control(par);
		this.imageBase = new global.Node(this);
		this._normalImage = new Sprite(this.imageBase);
		this._selectImage = new Sprite(this.imageBase);
		this._disableImage = new Sprite(this.imageBase);
		this._selectImage.visible=false;
		this._normalImage.visible=true;
		this._disableImage.visible=false;
		_title = new Label(this.imageBase);
		_title.setAnchor(0.5,0.5);
		_title.absolute = 1;
		_title.visible = false;
	}

	function loadImages (graphic) 
	{
		graphicImage = graphic;
	}

	function loadButtons (normal,select) 
	{
		normalImage = normal;
		if (select) {
			selectImage = select;
		}
	}

	function setImageSize (w,h) 
	{
    	this.setSize(...);
    	this.imageBase.x = this.width/2;
    	this.imageBase.y = this.height/2;
		this._normalImage.setImageSize(w,h,true);
		this._selectImage.setImageSize(w,h,true);
		this._disableImage.setImageSize(w,h,true);
	}

	function onMouseDown (x,y) 
	{
		super.onMouseDown(x,y);
		if(!this.ignore){
			this._selectImage.visible=true;
			this._normalImage.visible=false;
			_title.color = _titleColorSelect;
		}
	}

	function onMouseUp (x,y) 
	{
		super.onMouseUp(x,y);
		this._selectImage.visible=false;
		this._normalImage.visible=true;
		_title.color = _titleColor;
		if (x>=0 && y>=0 && x<=this.width&&y<=this.height) {
			this.exception();
		}
	}

	function exception () 
	{
		var exp = "";
		if (this.clickData.exp) {
			exp += this.clickData.exp;
			exp += ";";
		}
		if (this.clickData.storage || this.clickData.target) {
			exp += "System.main.process(\"";
			exp += this.clickData.storage;
			exp += "\",\"";
			exp += this.clickData.target;
			exp += "\");";
		}
		if (exp != "") {
			Scripts.addAsyncFunction(function (){
				Scripts.eval(this[0]);
			} incontextof [exp]);
		}
		disableAfterClick();
	}

	property disabled{
	    setter(v) {
	    	//setter
	    	if (super.disabled != v) {
	    		super.disabled = v;
	    		this._disableImage.visible = v;
	    		this._selectImage.visible = !v;
	    		this._normalImage.visible = !v;
	    		if (v) {
	    			_title.color = _titleColorDisable;
	    		}
	    		else {
	    			_title.color = _titleColor;
	    		}
	    	}
		}
		getter {
	    	//getter
			return super.disabled;
		}
	}

	var _normalImage=void;
	property normalImage{
	    setter(v) {
	    	//setter
	    	if (typeof v == 'Object' &&
	    		v instanceof 'Array') {
		    	this._normalImage.loadImages(v[0],v[1]);
		    	this.setSize(this._normalImage.width,this._normalImage.height);
		    	this.imageBase.x = this.width/2;
		    	this.imageBase.y = this.height/2;
			}
			else if(typeof v == 'String'){
				this._normalImage.loadImages(v);
		    	this.setSize(this._normalImage.width,this._normalImage.height);
		    	this.imageBase.x = this.width/2;
		    	this.imageBase.y = this.height/2;
			}
		}
		getter {
	    	//getter
			return this._normalImage;
		}
	}

	var _selectImage=void;
	property selectImage{
	    setter(v) {
	    	//setter
	    	if (typeof v == 'Object' &&
	    		v instanceof 'Array') {
		    	this._selectImage.loadImages(v[0],v[1]);
			}
			else if(typeof v == 'String'){
				this._selectImage.loadImages(v);
			}
		}
		getter {
	    	//getter
			return this._selectImage;
		}
	}

	var _disableImage=void;
	property disableImage{
	    setter(v) {
	    	//setter
	    	if (typeof v == 'Object' &&
	    		v instanceof 'Array') {
		    	this._disableImage.loadImages(v[0],v[1]);
			}
			else if(typeof v == 'String'){
				this._disableImage.loadImages(v);
			}
		}
		getter {
	    	//getter
			return this._disableImage;
		}
	}

	property graphicImage{
	    setter(v) {
	    	//setter
	    	this._normalImage.loadImageWithMargin(v,0,2/3,0,0);
	    	this.setSize(this._normalImage.width,this._normalImage.height);
	    	this.imageBase.x = this.width/2;
	    	this.imageBase.y = this.height/2;
	    	this._selectImage.loadImageWithMargin(v,1/3,1/3,0,0);
	    	this._disableImage.loadImageWithMargin(v,0,2/3,0,0);
		}
	}

	var _title=void;
	property title{
	    setter(v) {
	    	//setter
	    	if (v == "") {
	    		_title.visible = false;
	    	}
	    	else {
	    		_title.visible = true;
	    	}
	    	_title.text = v;
			_title.setSizeToImageSize();
		}
		getter {
	    	//getter
			return _title.text;
		}
	}

	property titleFace{
	    setter(v) {
	    	//setter
	    	_title.font.face = v;
		}
		getter {
	    	//getter
			return _title.font.face;
		}
	}

	property titleSize{
	    setter(v) {
	    	//setter
	    	_title.font.size = v;
		}
		getter {
	    	//getter
			return _title.font.size;
		}
	}

	var _titleColor=0xffffffff;
	property titleColor{
	    setter(v) {
	    	//setter
	    	_title.color = v;
	    	_titleColor = v;
		}
		getter {
	    	//getter
			return _titleColor;
		}
	}

	var _titleColorSelect=0xffffffff;
	property titleColorSelect{
	    setter(v) {
	    	//setter
	    	_titleColorSelect = v;
		}
		getter {
	    	//getter
			return _titleColorSelect;
		}
	}

	var _titleColorDisable=0xffffffff;
	property titleColorDisable{
	    setter(v) {
	    	//setter
	    	_titleColorDisable = v;
		}
		getter {
	    	//getter
			return _titleColorDisable;
		}
	}
}