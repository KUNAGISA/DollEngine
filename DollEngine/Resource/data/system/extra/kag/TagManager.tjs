
class TagManager extends KAGController
{
	var macroParams = [];
	var handlers;
	var owner;
	function TagManager (app) 
	{
		super.KAGController();
		this.owner = app;
		handlers = app.tagHandlers;
	}

	function jumpStorage (storage="",label="") 
	{
		if(this.stepInLabel(storage,label,false)) {
			asyncTrigger(execTags);
			return true;
		}
		else {
			printf("跳转%s:%s失败",storage,label);
			return false;
		}
	}

	function callStorage (storage="",label="") 
	{
		if(this.stepInLabel(storage,label,true)) {
			asyncTrigger(execTags);
			return true;
		}
		else {
			printf("呼叫%s:%s失败",storage,label);
			return false;
		}
	}

	function execTags () 
	{
		// var isjump = false;
		while(true){
			var time = doTag();
			if (time < 0) {
				// dm("停止，或等待点击，或跳转");
				return;
			}
			// else if(time == -1) {
			// 	//即将跳转
			// 	isjump = true;
			// 	break;
			// }
			else if(time > 0){
				waitTime(time);
				return;
			}
			stepNext();
		}
		// if (isjump) {
		// 	asyncTrigger(execTags);
		// }
	}

	function onExecute (name,params) 
	{
		owner.status.waitClickMode = WAIT_CLICK_NONE;
		if (owner.status.isClickSkip && name != 'ch' && name != 'locate' && name != 'r') {
			owner.status.isClickSkip = false;
		}
		if (name == "return") {
			if(this.stepOutLabel()){
				doNext();
			}
			else {
				em("不对应的return或endmacro");
			}
			return -1;
		}
		if (name == "endmacro") {
			this.macroParams.erase(this.macroParams.count-1);
			if(this.stepOutLabel()){
				doNext();
			}
			else {
				em("不对应的return或endmacro");
			}
			return -1;
		}
		if(typeof this.handlers[name] != "undefined")
		{
			var time = this.handlers[name](params);
			owner.status.clickToNext = false;
			if(time == void || time == 0) {
				return 0;
			}
			else {
				return time;
			}
		}
		else
		{
			if(this.stepInLabel("MACRO",name,true))
			{
				this.macroParams.add(params);
				asyncTrigger(execTags);
				return -1; //即将jump
			}
			else
			{
				dm("未找到指令"+name);
				return 0;
			}
		}
	}

	function doNext () 
	{
		stepNext();
		asyncTrigger(execTags);
	}

	function waitTime (time) 
	{
		var timer = new Timer(doNext);
		timer.interval = time;
		timer.enabled = true;
		timer.count = 1;
	}

	function getMacroParams () 
	{
		if (this.macroParams.count == 0) {
			em("macro参数为空，一定是哪里有问题了");
		}
		return this.macroParams[-1];
	}

}

property mp{
	getter {
		return kag.tagManager.getMacroParams();
	}
}

