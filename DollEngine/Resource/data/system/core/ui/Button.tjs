
class Button extends Control
{
	var clickData = %[
		exp : "", //点击时执行的表达式
		se : '', //点击时的音效
		sebuf : '',//点击时的音效音轨的编号
		storage : void, //跳转的脚本
		target : void, //跳转的脚本的标签
	];
	var _imageBase = void;
	var _normalImage;
	var _selectImage;
	var _disableImage;

	function Button (app,par) 
	{
		super.Control(app,par);
		_imageBase = new global.GameObject(app,this);
		_normalImage = new Sprite(app,_imageBase);
		_selectImage = new Sprite(app,_imageBase);
		_disableImage = new Sprite(app,_imageBase);
		_normalImage.visible=true;
		_selectImage.visible=false;
		_disableImage.visible=false;
		// _title = new Label(app,_imageBase);
		// _title.setAnchor(0.5,0.5);
		// _title.absolute = 1;
		// _title.visible = false;
	}

	function loadGraphic (graphic) 
	{
		if(this._normalImage.loadImages(graphic))
		{
			this._selectImage.loadImages(graphic);
			var w = this._normalImage.width/3;
			var h = this._normalImage.height;
			this._normalImage.clipRect(0,0,w,h);
			this._selectImage.clipRect(w,0,w,h);
			setSizeToImageSize();
		}
	}

	function loadButtons (normal,select) 
	{
		this._normalImage.loadImages(normal);
		if (select) {
			this._selectImage.loadImages(select);
		}
		else {
			this._selectImage.loadImages(normal);
			this._selectImage.startColor = 0x888888;
			this._selectImage.endColor = 0x888888;
		}
		setSizeToImageSize();
	}

	function setSizeToImageSize () {
		setSize(_normalImage.width,_normalImage.height);
		_imageBase.x = _normalImage.width/2;
		_imageBase.y = _normalImage.height/2;
	}

	function setImageSize (w,h) 
	{
    	setSize(...);
    	_imageBase.x = width/2;
    	_imageBase.y = height/2;
		_normalImage.setImageSize(w,h,true);
		_selectImage.setImageSize(w,h,true);
		_disableImage.setImageSize(w,h,true);
	}

	function onMouseDown (x,y) 
	{
		super.onMouseDown(x,y);
		this._selectImage.visible=true;
		this._normalImage.visible=false;
	}

	function onMouseUp (x,y) 
	{
		super.onMouseUp(x,y);
		this._selectImage.visible=false;
		this._normalImage.visible=true;
		// _title.color = _titleColor;
		if (x>=0 && y>=0 && x<=this.width&&y<=this.height) {
			this.exception();
		}
	}

	function exception () 
	{
		var exp = "";
		if (this.clickData.exp) {
			exp += this.clickData.exp;
			exp += ";";
		}
		var needDisabled = false;
		if (this.clickData.storage || this.clickData.target) {
			exp += "System.delegate.process(\"";
			exp += this.clickData.storage;
			exp += "\",\"";
			exp += this.clickData.target;
			exp += "\");";
			if (!isSysControl) {
				needDisabled = true;
			};
		}
		if (exp != "") {
			asyncTrigger(Scripts.eval,[exp]);
		}
		if (needDisabled) {
			disableAfterClick();
		}
	}

	property disabled{
	    setter(v) {
	    	//setter
	    	if (super.disabled != v) {
	    		super.disabled = v;
	    		this._disableImage.visible = v;
	    		this._selectImage.visible = !v;
	    		this._normalImage.visible = !v;
	    		if (v) {
	    			_title.color = _titleColorDisable;
	    		}
	    		else {
	    			_title.color = _titleColor;
	    		}
	    	}
		}
		getter {
	    	//getter
			return super.disabled;
		}
	}

	var _title=void;
	property title{
	    setter(v) {
	    	//setter
	    	if (v == "") {
	    		_title.visible = false;
	    	}
	    	else {
	    		_title.visible = true;
	    	}
	    	_title.text = v;
			_title.setSizeToImageSize();
		}
		getter {
	    	//getter
			return _title.text;
		}
	}

	property titleFace{
	    setter(v) {
	    	//setter
	    	_title.font.face = v;
		}
		getter {
	    	//getter
			return _title.font.face;
		}
	}

	property titleSize{
	    setter(v) {
	    	//setter
	    	_title.font.size = v;
		}
		getter {
	    	//getter
			return _title.font.size;
		}
	}

	var _titleColor=0xffffffff;
	property titleColor{
	    setter(v) {
	    	//setter
	    	_title.color = v;
	    	_titleColor = v;
		}
		getter {
	    	//getter
			return _titleColor;
		}
	}

	var _titleColorSelect=0xffffffff;
	property titleColorSelect{
	    setter(v) {
	    	//setter
	    	_titleColorSelect = v;
		}
		getter {
	    	//getter
			return _titleColorSelect;
		}
	}

	var _titleColorDisable=0xffffffff;
	property titleColorDisable{
	    setter(v) {
	    	//setter
	    	_titleColorDisable = v;
		}
		getter {
	    	//getter
			return _titleColorDisable;
		}
	}
}