
class Layer extends GameObject
{
	//public
	var font;

	//private
	var _image;
	var _imagePath;
	var _clipRect;
	function Layer (app,par) {
		super.GameObject(app,par);
		font = new Font();
		_image = new Image();
	}

	function finalize () {
		invalidate font;
		invalidate _image;
		super.finalize();
	}

	function loadImages (path) {
		if(_image.loadImages(path,""))
		{
			_imagePath = path;
			setSizeToImageSize();
			return true;
		}
		return false;
	}

	function freeImage () 
	{
		_imagePath = void;
		this._image.freeImage();
	}

	function clipRect (x,y,w,h) {
		_clipRect = [x,y,w,h];
		_image.clipRect(x,y,w,h);
		setSizeToImageSize();
	}

	function setSizeToImageSize () {
		setSize(_image.paintWidth,_image.paintHeight);
	}

	function setSize (w=void,h=void) {
		width = w if w!==void;
		height = h if h!==void;
	}

	function setPos (x=void,y=void,w=void,h=void) {
		this.x = x if x!==void;
		this.y = y if y!==void;
		setSize(w,h);
	}

	function setAnchor (x=void,y=void) {
		anchorX = x if x!==void;
		anchorY = y if y!==void;
	}

	function onPaint () {
		_image.paint(_transInWorld);
	}

	function onSave () {
		var dict = super.onSave();
		with(dict){
			.className = "Layer";
			.imagePath = _imagePath;
			.opacity = opacity;
			.color = color;
			.clipRect = _clipRect;
		}
		return dict;
	}

	function onLoad (dict) {
		super.onLoad(dict);
		with(dict){
			loadImages(.imagePath) if .imagePath != void;
			opacity = .opacity;
			color = .color;
			clipRect(.clipRect*) if .clipRect != void;
		}
	}

	var _opacity = 255;
	property opacity {
	    setter(v) {
	    	if(_opacity != v) {
		    	_opacity = v;
		    	_image.startOpacity = v;
		    	_image.endOpacity = v;
	    	}
	    }
	    getter {
	    	return _opacity;
	    }
	}
	
	var _color=void;
	property color{
	    setter(v) {
	    	//setter
	    	this._color = v;
	    	this._image.startColor = this._image.endColor = v;
		}
		getter {
	    	//getter
			return this._color;
		}
	}

}

if(DEConfig.module.kag){
	global.KAGLayer = global.Layer;
}
