class LinkButton extends Control
{
	var clickData = %[
		exp : "", //点击时执行的表达式
		clickse : void, //点击时的音效
		clicksebuf : 0,//点击时的音效音轨的编号
		storage : void, //跳转的脚本
		target : void, //跳转的脚本的标签
	];

	var _links = [];
	var _selectImages = [];

	function LinkButton (app,par) {
		super.Control(...);
		this.width = par.width;
		this.height = par.height;
	}

	function addText (label) {
		_links.add(label);
	}

	function clearText () {
		_links.clear();
	}

	function end () {
		for (var i = _links.count - 1; i >= 0; i--) {
			var lb = _links[i];
			var lay = new LayerColor(app,this);
			lay.x = lb.x;
			lay.y = lb.y;
			lay.setSize(lb.width,lb.height);
			lay.color = 0x8888ff;
			lay.opacity = 128;
			lay.setAnchor(0,1);
			lay.visible = false;
			this._selectImages.add(lay);
		};
	}

	function pointInside (x,y,dict) {
		var ret = parent.pointInside(x,y,dict);
		if (ret) {
			for (var i = _links.count - 1; i >= 0; i--) {
				var lb = _links[i];
				if(dict.x >= lb.x && dict.x <= lb.x+lb.width &&
					dict.y >= lb.y-lb.height && dict.y <= lb.y )
				{
					dict.x = 0;
					dict.y = 0;
					return true;
				}
			}
		}
		dict.x = -1;
		dict.y = -1;
		return false;
	}

	function onMouseDown (x,y) 
	{
		var ret = super.onMouseDown(x,y);
		if(!ret) {
			return false;
		}
		for (var i = _selectImages.length - 1; i >= 0; i--) {
			_selectImages[i].visible = true;
		};
	}

	function onMouseUp (x,y) {
		super.onMouseUp(x,y);
		for (var i = _selectImages.length - 1; i >= 0; i--) {
			_selectImages[i].visible = false;
		};
		if (x==0 && y==0) {
			exception();
		}
	}

	function exception () 
	{
		if (clickData.clickse&&clickData.clickse!="") {
			app.playSe(clickData.clickse,clickData.clicksebuf);
		}
		if (this.clickData.exp) {
			Scripts.eval(clickData.exp);
		}
		if (clickData.storage || clickData.target) {
			asyncTrigger(app.process,[clickData.storage,clickData.target]);
		}
	}

}