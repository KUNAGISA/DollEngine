
class Application extends SystemDelegate
{
	///public
	var window;
	var sysbase;

	var status = %[];
	var deffont = %[]; //默认字体设置
	var deffontChanged = true;//默认字体是否有过变化

	//property
	var needRedraw;
	var needRetouch;

	//private
	var _enabledTimers;
	var _lastSeconds;
	var _transRTT;
	var _allTimelines;
	var _allAsyncTriggers = [];

	function Application () {
		super.SystemDelegate();

		_lastSeconds = System.seconds;
		_enabledTimers = global.Timer.g_enabledTimers;
		_allTimelines = new Set();
		initStatus();

		window = new Window();
		window.setLayerSize(DEConfig.device.width,DEConfig.device.height);
		window.setSize(DEConfig.device.width*DEConfig.device.scale,DEConfig.device.height*DEConfig.device.scale);
		window.visible = true;
		window.title = DEConfig.game.title;

		sysbase = new Layer(this,null);
		sysbase.setSize(window.width,window.height);

		_transRTT = new RTTLayer(this,null);
		_transRTT.draw(sysbase);
		_transRTT.opacity=0;
		
		System.setDelegate(this);
	}

	function finalize () {
		invalidate window;
	}

	function initStatus () {
	}

	/*场景过渡效果*/
	function sceneTransition (type, time, params*) {
		if(_transRTT) {
			dm("【Application sceneTransition】场景正在过渡");
			return;
		}
		dm("【Application sceneTransition】场景开始过渡，预计耗时",time,,System.seconds);
		_transRTT.draw(sysbase);
		_transRTT.opacity=255;
		this["sceneTrans"+type](time, params*);
	}

	function sceneTransCrossFade (time) {
		var tl = new Timeline(this,_transRTT);
		tl.setKeyframe("opacity",255,0,time);
		tl.onTimelineFinished = onSceneTransFinished;
		new AsyncTrigger(tl.start);
	}
	/*帧刷新*/

	function update () {
		var nSeconds = System.seconds;
		var dt = (nSeconds - _lastSeconds)*1000;
		updateTimer(dt);
		updateTimeLine(dt);
		_lastSeconds = nSeconds;
	}

	function updateTimer (dt) {
		_enabledTimers.foreach(function (timer) {
			timer.activeTime += this[0];
			if(timer.activeTime >= timer.interval) {
				timer.activeTime -= timer.interval;
				timer.onTimer();
			}
		} incontextof [dt]) ;
	}

	function updateTimeLine (dt) {
		_allTimelines.foreach(function (tl) {
			tl.update(this[0]);
		} incontextof [dt]);
	}

	function onMainLoop () {
		update();
		window.beforeMainLoop();
		sysbase.visit();
		if(_transRTT.opacity > 0) {
			_transRTT.visit();
		}
		window.afterMainLoop();
		onAsyncTrigger();
	}

	function onSceneTransFinished () {
		_transRTT.opacity = 0;
		dm("【Application sceneTransition】场景过渡完毕",System.seconds);
	}

	function onAsyncTrigger () {
		for (var i = 0; i < _allAsyncTriggers.count; i++) {
			var func = _allAsyncTriggers[i][0];
			var elm = _allAsyncTriggers[i][1];
			if(elm){
				func(elm*);
			}
			else {
				func();
			}
		};
		_allAsyncTriggers.clear();
	}

	function onMouseDown (x,y) {
		
	}

	function onMouseUp (x,y) {
		
	}

	function onMouseMove (x,y) {
		
	}

	function onClick (x,y) {
		
	}
}